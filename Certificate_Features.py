#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Created on Tue Sep 14 17:39:12 2021

@author: elliot
"""
#for valid days
#format ASN1_TIME: Aug 8 12:49:31 2017 GMT
daysPassed = {}
daysPassed["Jan"] = 0
daysPassed["Feb"] = 31
daysPassed["Mar"] = 59
daysPassed["Apr"] = 90
daysPassed["May"] = 120
daysPassed["Jun"] = 151
daysPassed["Jul"] = 181
daysPassed["Aug"] = 212
daysPassed["Sep"] = 243
daysPassed["Oct"] = 273
daysPassed["Nov"] = 304
daysPassed["Dec"] = 334

extesions_unsorted=['0000','0001','0002','0003','0004','0005','0006','0007','0008','0009','000a','000b','000c','000d',
           '000e','000f','0010','0011','0012','0013','0014','0015','0016','0017','0018','0019','0023','3374',
           'ff01']
extMap = {"server_name": 0,"max_fragment_length" : 1, "client_certificate_url" : 2, "trusted_ca_keys": 3,
          "truncated_hmac": 4, "status_request" : 5,"user_mapping" : 6,"client_authz":7,"server_authz": 8, 
          "cert_type":9,"supported_groups" :10,"ec_point_formats" : 11,"srp" :12,"signature_algorithms":13,
          "use_srtp":14,"heartbeat" : 15,"application_layer_protocol_negotiation":16,"status_request_v2":17, 
          "signed_certificate_timestamp" : 18, "client_certificate_type" : 19,"server_certificate_type" : 20,
          "padding" : 21, "encrypt_then_mac" : 22, "extended_master_secret" : 23,"token_binding" : 24, 
          "cached_info":25, "session_ticket" : 35,"renegotiation_info" : 65281}
extesions=sorted(extesions_unsorted)

def obtainDay(tstamp):
    t = tstamp.split()
    month = t[0]
    day = int(t[1])
    year = int(t[3])
    return daysPassed[month]+day+(year-2000)*365

def obtainExtList(cexts):
    size_ext=len(extesions)
    exts=[0]*size_ext
    ext_holder_array=[]
    ext_holder_array=cexts
    for item in cexts: 
        if 'kind' in item: 
            pass
        else:
            x=str("%0.4x" %(extMap[list((item.keys()))[0]]))
            if x in extesions:
                index=extesions.index(x)
                exts[index]=1 
    # print(ext_holder_array[1].keys())            
    for j in ext_holder_array: 
        if 'kind' in j: 
            pass
        else:
            d=str("%0.4x" %(extMap[list((j.keys()))[0]]))
            if d not in extesions:
                print("New Extesion :",d) 
    return exts

def obtainValidList(scerts):
    valid = []
    for item in scerts:
        if ("validity_not_before" in item) and ("validity_not_after" in item):
            before = item["validity_not_before"]
            after = item["validity_not_after"]
            t1 = obtainDay(before)
            t2 = obtainDay(after)
            valid.append(t2-t1)
    return valid

def obtainSelfSigned(scerts):
    if len(scerts) > 1 or len(scerts) == 0:
        return 0
    elif ("issuer" in scerts[0]) and ("subject" in scerts[0]):
        return scerts[0]["issuer"] == scerts[0]["subject"]
    else:
        return 0

def obtainSANs(scerts): 
        sans = []
        for cert in scerts:
            exts = cert["extensions"]
            for ext in exts:
                key = list((ext.keys()))[0]
                if key.find("Subject Alternative Name") != -1:
                    sans.append(len(ext[key].split(',')))
        # print("Server Alt Names :",sans)
        return sans     